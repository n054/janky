{"name":"Janky","tagline":"Continuous integration server built on top of Jenkins and Hubot","body":"Janky\r\n=====\r\n\r\nThis is Janky, a continuous integration server built on top of\r\n[Jenkins][], controlled by [Hubot][], and designed for [GitHub][].\r\n\r\n* **Built on top of Jenkins.** The power, vast amount of plugins and large\r\n  community of the popular CI server all wrapped up in a great experience.\r\n\r\n* **Controlled by Hubot.** Day to day operations are exposed as simple\r\n  Hubot commands that the whole team can use.\r\n\r\n* **Designed for GitHub.** Janky creates the appropriate [web hooks][w] for\r\n  you and the web app restricts access to members of your GitHub organization.\r\n\r\n[GitHub]: https://github.com\r\n[Hubot]: http://hubot.github.com\r\n[Jenkins]: http://jenkins-ci.org\r\n[w]: http://developer.github.com/v3/repos/hooks/\r\n\r\nHubot usage\r\n-----------\r\n\r\nStart by setting up a new Jenkins job and GitHub web hook for a\r\nrepository:\r\n\r\n    hubot ci setup github/janky\r\n\r\nThe `setup` command can safely be run over and over again. It won't do\r\nanything unless it needs to. It takes an optional name argument:\r\n\r\n    hubot ci setup github/janky janky-ruby1.9.2\r\n\r\nIt also takes an optional template name argument:\r\n\r\n    hubot ci setup github/janky janky-ruby1.9.2 ruby-build\r\n\r\nAll branches are built automatically on push. Disable auto build with:\r\n\r\n    hubot ci toggle janky\r\n\r\nRun the command again to re-enable it. Force a build of the master\r\nbranch:\r\n\r\n    hubot ci build janky\r\n\r\nOf a specific branch:\r\n\r\n    hubot ci build janky/libgit2\r\n\r\nDifferent builds aren't relevant to the same chat room and so Janky\r\nlets you choose where notifications are sent to. First get a list of\r\navailable rooms:\r\n\r\n    hubot ci rooms\r\n\r\nThen pick one:\r\n\r\n    hubot ci set room janky The Serious Room\r\n\r\nGet the status of a build:\r\n\r\n    hubot ci status janky\r\n\r\nSpecific branch:\r\n\r\n    hubot ci status janky/libgit2\r\n\r\nAll builds:\r\n\r\n    hubot ci status\r\n\r\nFinally, get a quick reference of the available commands with:\r\n\r\n    hubot ci?\r\n\r\nInstalling\r\n----------\r\n\r\n### Jenkins\r\n\r\nJanky requires access to a Jenkins server. Version **1.580** is\r\nrecommended. Refer to the Jenkins [documentation][doc] for installation\r\ninstructions and install the [Notification Plugin][np] version 1.4.\r\n\r\nRemember to set the Jenkins URL in `http://your-jenkins-server.com/configure`.\r\nJanky will still trigger builds but will not update the build status without this set.\r\n\r\n[doc]: https://wiki.jenkins-ci.org/display/JENKINS/Installing+Jenkins\r\n[np]: https://wiki.jenkins-ci.org/display/JENKINS/Notification+Plugin\r\n\r\n### Deploying\r\n\r\nJanky is designed to be deployed to [Heroku](https://heroku.com).\r\n\r\nGrab all the necessary files from [the gist][gist]:\r\n\r\n    $ git clone git://gist.github.com/1497335 janky\r\n\r\nThen push it up to a new Heroku app:\r\n\r\n    $ cd janky\r\n    $ heroku create --stack cedar\r\n    $ bundle install\r\n    $ git add Gemfile.lock\r\n    $ git commit Gemfile.lock -m \"lock bundle\"\r\n    $ git push heroku master\r\n\r\nAfter configuring the app (see below), create the database:\r\n\r\n    $ heroku run rake db:migrate\r\n\r\n**NOTE:** Ruby version 2.0.0+ is required to run Janky.\r\n\r\n[gist]: https://gist.github.com/1497335\r\n\r\nUpgrading\r\n---------\r\n\r\nWe **strongly recommend** backing up your Janky database before upgrading.\r\n\r\nThe general process is to then upgrade the gem, and then run migrate.  Here is how\r\nyou do that on a local box you have access to (this process will differ for Heroku):\r\n\r\n    cd [PATH-TO-JANKY]\r\n    gem update janky\r\n    rake db:migrate\r\n\r\nConfiguring\r\n-----------\r\n\r\nJanky is configured using environment variables. Use the `heroku config`\r\ncommand:\r\n\r\n    $ heroku config:add VARIABLE=value\r\n\r\nRequired settings:\r\n\r\n* `JANKY_BASE_URL`: The application URL **with** a trailing slash. Example:\r\n  `http://mf-doom-42.herokuapp.com/`.\r\n* `JANKY_BUILDER_DEFAULT`: The Jenkins server URL **with** a trailing slash.\r\n   Example: `http://jenkins.example.com/`. For basic auth, include the\r\n   credentials in the URL: `http://user:pass@jenkins.example.com/`.\r\n   Using GitHub OAuth with Jenkins is not supported by Janky.\r\n* `JANKY_CONFIG_DIR`: Directory where build config templates are stored.\r\n  Typically set to `/app/config` on Heroku.\r\n* `JANKY_HUBOT_USER`: Login used to protect the Hubot API.\r\n* `JANKY_HUBOT_PASSWORD`: Password for the Hubot API.\r\n* `JANKY_GITHUB_USER`: The login of the GitHub user used to access the\r\n  API. Requires Administrative privileges to set up service hooks.\r\n* `JANKY_GITHUB_PASSWORD`: The password for the GitHub user.\r\n* `JANKY_GITHUB_HOOK_SECRET`: Secret used to sign hook requests from\r\n  GitHub.\r\n* `JANKY_CHAT_DEFAULT_ROOM`: Chat room where notifications are sent by default.\r\n\r\nOptional database settings:\r\n\r\n* `DATABASE_URL`: Database connection URL. Example:\r\n  `postgres://user:password@host:port/db_name`.\r\n* `JANKY_DATABASE_SOCKET`: Path to the database socket. Example:\r\n  `/var/run/mysql5/mysqld.sock`.\r\n\r\n### GitHub Enterprise\r\n\r\nUsing Janky with [GitHub Enterprise][ghe] requires one extra setting:\r\n\r\n* `JANKY_GITHUB_API_URL`: Full API URL of the instance, *with* a trailing\r\n  slash. Example: `https://github.example.com/api/v3/`.\r\n\r\n[ghe]: https://enterprise.github.com\r\n\r\n### GitHub Status API\r\n\r\nhttps://github.com/blog/1227-commit-status-api\r\n\r\nTo update pull requests with the build status generate an OAuth token\r\nvia the GitHub API:\r\n\r\n    curl -u username:password \\\r\n      -d '{ \"scopes\": [ \"repo:status\" ], \"note\": \"janky\" }' \\\r\n      https://api.github.com/authorizations\r\n\r\nthen set `JANKY_GITHUB_STATUS_TOKEN`.  Optionally, you can also set\r\n`JANKY_GITHUB_STATUS_CONTEXT` to send a context to the GitHub API by\r\ndefault\r\n\r\n`username` and `password` in the above example should be the same as the\r\nvalues provided for `JANKY_GITHUB_USER` and `JANKY_GITHUB_PASSWORD`\r\nrespectively.\r\n\r\n### Chat notifications\r\n\r\n#### Campfire\r\nJanky notifies [Campfire][] chat rooms by default. Required settings:\r\n\r\n* `JANKY_CHAT_CAMPFIRE_ACCOUNT`: account name.\r\n* `JANKY_CHAT_CAMPFIRE_TOKEN`: authentication token for the user sending\r\n  build notifications.\r\n\r\n[Campfire]: http://campfirenow.com/\r\n\r\n#### HipChat\r\n\r\nRequired settings:\r\n\r\n* `JANKY_CHAT=hipchat`\r\n* `JANKY_CHAT_HIPCHAT_TOKEN`: authentication token (This token needs to be an\r\n  admin token, not a notification token.)\r\n* `JANKY_CHAT_HIPCHAT_FROM`: name that messages will appear be sent from.\r\n  Defaults to `CI`.\r\n* `JANKY_HUBOT_USER` should be XMPP/Jabber username in format xxxxx_xxxxxx\r\n  rather than email\r\n* `JANKY_CHAT_DEFAULT_ROOM` should be the name of the room instead of the\r\n  XMPP format, for example: `Engineers` instead of xxxx_xxxxxx.\r\n\r\nInstallation:\r\n\r\n* Add `require \"janky/chat_service/hipchat\"` to the `config/environment.rb`\r\n  file **before** the `Janky.setup(ENV)` line.\r\n* `echo 'gem \"hipchat\", \"~>0.4\"' >> Gemfile`\r\n* `bundle`\r\n* `git commit -am \"install hipchat\"`\r\n\r\n#### Slack\r\n\r\nRequired settings:\r\n\r\n* `JANKY_CHAT=slack`\r\n* `JANKY_CHAT_SLACK_TEAM`: slack team name\r\n* `JANKY_CHAT_SLACK_TOKEN`: authentication token for the user sending build notifications.\r\n* `JANKY_CHAT_SLACK_USERNAME`: name that messages will appear be sent from.\r\n  Defaults to `CI`.\r\n* `JANKY_CHAT_SLACK_ICON_URL`: URL to an image to use as the icon for this message.\r\n\r\nInstallation:\r\n\r\n* Add `require \"janky/chat_service/slack\"` to the `config/environment.rb`\r\n  file **before** the `Janky.setup(ENV)` line.\r\n* `echo 'gem \"slack.rb\"' >> Gemfile`\r\n* `bundle`\r\n* `git commit -am \"install slack\"`\r\n\r\n#### Hubot\r\n\r\nSends notifications to Hubot via [janky script](http://git.io/hubot-janky).\r\n\r\nRequired settings:\r\n\r\n* `JANKY_CHAT=hubot`\r\n* `JANKY_CHAT_HUBOT_URL`: URL to your Hubot instance.\r\n* `JANKY_CHAT_HUBOT_ROOMS`: List of rooms which can be set via `ci set room`.\r\n  * For IRC: Comma-separated list of channels `\"#room, #another-room\"`\r\n  * For Campfire/HipChat: List with room id and name `\"34343:room, 23223:another-room\"`\r\n  * For Slack: List with room names `\"room, another-room\"`\r\n\r\nInstallation:\r\n* Add `require \"janky/chat_service/hubot\"` to the `config/environment.rb`\r\n  file **before** the `Janky.setup(ENV)` line.\r\n\r\n### Authentication\r\n\r\nTo restrict access to members of a GitHub organization, [register a new\r\nOAuth application on GitHub](https://github.com/settings/applications)\r\nwith the callback set to `$JANKY_BASE_URL/auth/github/callback` then set\r\na few extra settings:\r\n\r\n* `JANKY_SESSION_SECRET`: Random session cookie secret. Typically\r\n  generated by a tool like `pwgen`.\r\n* `JANKY_AUTH_CLIENT_ID`: The client ID of the OAuth application.\r\n* `JANKY_AUTH_CLIENT_SECRET`: The client secret of the OAuth application.\r\n* `JANKY_AUTH_ORGANIZATION`: The organization name. Example: \"github\".\r\n* `JANKY_AUTH_TEAM_ID`: An optional team ID to give auth to. Example: \"1234\".\r\n\r\n### Hubot\r\n\r\nInstall the [janky script](http://git.io/hubot-janky) in your Hubot\r\nthen set the `HUBOT_JANKY_URL` environment variable. Example:\r\n`http://user:password@janky.example.com/_hubot/`, with user and password\r\nreplaced by `JANKY_HUBOT_USER` and `JANKY_HUBOT_PASSWORD` respectively.\r\n\r\n### Custom build configuration\r\n\r\nThe default build command should suffice for most Ruby applications:\r\n\r\n    $ bundle install --path vendor/gems --binstubs\r\n    $ bundle exec rake\r\n\r\nFor more control you can add a `script/cibuild` at the root of your\r\nrepository for Jenkins to execute instead.\r\n\r\nFor total control, whole Jenkins' `config.xml` files can be associated\r\nwith Janky builds. Given a build called `windows` and a template name\r\nof `psake`, Janky will try `config/jobs/psake.xml.erb` to use a template,\r\n`config/jobs/windows.xml.erb` to try the job name if the template does\r\nnot exit,  before finally falling back to the default\r\nconfiguration, `config/jobs/default.xml.erb`. After updating or adding\r\na custom config, run `hubot ci setup` again to update the Jenkins\r\nserver.\r\n\r\nHacking\r\n-------\r\n\r\nGet your environment up and running:\r\n\r\n    script/bootstrap\r\n\r\nCreate the databases:\r\n\r\n    mysqladmin -uroot create janky_development\r\n    mysqladmin -uroot create janky_test\r\n\r\nCreate the tables:\r\n\r\n    RACK_ENV=development bin/rake db:migrate\r\n    RACK_ENV=test bin/rake db:migrate\r\n\r\nSeed some data into the development database:\r\n\r\n    bin/rake db:seed\r\n\r\nStart the server:\r\n\r\n    script/server\r\n\r\nOpen the app:\r\n\r\n    open http://localhost:9393/\r\n\r\nRun the test suite:\r\n\r\n    script/test\r\n\r\nContributing\r\n------------\r\n\r\nFork the [Janky repository on GitHub](https://github.com/github/janky) and\r\nsend a Pull Request.  Note that any changes to behavior without tests will\r\nbe rejected.  If you are adding significant new features, please add both\r\ntests and documentation.\r\n\r\nMaintainers\r\n-----------\r\n\r\n* [@mattr-](https://github.com/mattr-)\r\n\r\nCopying\r\n-------\r\n\r\nCopyright © 2011-2014, GitHub, Inc. See the `COPYING` file for license\r\nrights and limitations (MIT).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}